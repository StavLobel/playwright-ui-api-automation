name: Smoke Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'tests/**'
      - '.github/workflows/smoke-tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'tests/**'
      - '.github/workflows/smoke-tests.yml'
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Type of smoke tests to run'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - ui-only
          - api-only
          - critical

env:
  PYTHON_VERSION: '3.11'
  NODE_VERSION: '18'
  # Ensure GITHUB_TOKEN has write permissions for Pages deployment
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  smoke-tests:
    name: Smoke Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright browsers
        run: |
          playwright install --with-deps
          playwright install chromium

      - name: Install Allure CLI
        run: npm install -g allure-commandline

      - name: Run Smoke Tests
        run: |
          python -m pytest tests/ -m smoke --browser chromium --alluredir=allure-results-smoke --html=smoke-test-report.html --self-contained-html

      - name: Upload Smoke test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: smoke-test-results
          path: |
            allure-results-smoke/
            smoke-test-report.html

      - name: Generate Allure Report
        if: always()
        run: |
          allure generate allure-results-smoke -o allure-report-smoke --clean

      - name: Upload Allure Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-report-smoke
          path: allure-report-smoke/

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: allure-report-smoke
          keep_files: true
          force_orphan: false

      - name: Notify Smoke Test Results
        uses: actions/github-script@v7
        if: always() && github.event_name == 'pull_request'
        with:
          script: |
            const { data: jobs } = await github.rest.actions.listJobsForWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId
            });

            const smokeTestJob = jobs.jobs.find(job => job.name === 'Smoke Tests');
            const status = smokeTestJob?.conclusion === 'success' ? '✅' : '❌';

            const summary = `## Smoke Test Execution Summary

            **Status**: ${status} ${smokeTestJob?.conclusion === 'success' ? 'All smoke tests passed' : 'Some smoke tests failed'}

            **Test Suite**: Critical functionality validation
            **Environment**: Python ${{ env.PYTHON_VERSION }}, Chromium browser

            **Results**:
            - Allure Report: https://${context.repo.owner}.github.io/${context.repo.repo}/
            - Test Artifacts: Available in workflow artifacts

            **Coverage**:
            - Critical UI flows (login, inventory, cart)
            - Essential API endpoints (airports, basic validation)
            - Framework stability verification

            **Purpose**: Quick validation of core functionality before running full test suites`;

            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: summary
            });
