name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: '3.11'
  NODE_VERSION: '18'

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest

    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
      fail-fast: false

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Set up Node.js (for Allure CLI)
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Set up Java (for Allure Reports)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Cache Python Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright Browsers
        run: |
          playwright install --with-deps ${{ matrix.browser }}

      - name: Install Allure CLI
        run: |
          npm install -g allure-commandline --save-dev

      - name: Run Code Quality Checks
        run: |
          make fmt
          make lint
          make type
        shell: bash

      - name: Run Tests (${{ matrix.browser }})
        run: |
          python -m pytest tests/ --browser=${{ matrix.browser }} --alluredir=allure-results-${{ matrix.browser }}
        env:
          # Set environment variables for test execution
          SAUCEDEMO_BASE_URL: "https://www.saucedemo.com"
          AIRPORTGAP_BASE_URL: "https://airportgap.com"
          BROWSER_HEADLESS: "true"
          TEST_TIMEOUT: "30000"

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-results-${{ matrix.browser }}
          path: allure-results-${{ matrix.browser }}/
          retention-days: 30

      - name: Upload Screenshots on Failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots-${{ matrix.browser }}
          path: screenshots/
          retention-days: 7

  report:
    name: Generate & Publish Report
    runs-on: ubuntu-latest
    needs: test
    if: always()

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Java (for Allure Reports)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Set up Node.js (for Allure CLI)
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Allure CLI
        run: |
          npm install -g allure-commandline --save-dev

      - name: Download All Test Results
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Merge Allure Results
        run: |
          mkdir -p allure-results
          find artifacts/ -name "allure-results-*" -type d | while read dir; do
            cp -r "$dir"/* allure-results/ 2>/dev/null || true
          done

      - name: Download Previous Allure History
        uses: actions/checkout@v4
        if: github.ref == 'refs/heads/main'
        with:
          ref: gh-pages
          path: gh-pages
        continue-on-error: true

      - name: Copy Allure History
        if: github.ref == 'refs/heads/main'
        run: |
          if [ -d "gh-pages/history" ]; then
            cp -r gh-pages/history allure-results/history
          fi
        continue-on-error: true

      - name: Generate Allure Report
        run: |
          allure generate allure-results -o allure-report --clean

      - name: Add Allure Report Metadata
        run: |
          echo "# Test Report" > allure-report/README.md
          echo "Generated: $(date)" >> allure-report/README.md
          echo "Commit: ${{ github.sha }}" >> allure-report/README.md
          echo "Branch: ${{ github.ref_name }}" >> allure-report/README.md
          echo "Run: ${{ github.run_number }}" >> allure-report/README.md

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: allure-report
          keep_files: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: 'Deploy Allure report for ${{ github.sha }}'

      - name: Add PR Comment with Report Link
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const reportPath = 'allure-report/index.html';

            if (fs.existsSync(reportPath)) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## 📋 Test Report

                ✅ Test execution completed!

                📊 **Allure Report**: Will be available at https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/ after merge to main

                🔗 **Artifacts**: Check the Actions tab for detailed test results and screenshots

                🚀 **Commit**: ${{ github.sha }}
                `
              });
            }

  notification:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [test, report]
    if: always()

    steps:
      - name: Test Results Summary
        run: |
          echo "## 📊 Test Execution Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Tests Status**: ${{ needs.test.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Report Status**: ${{ needs.report.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Run Number**: ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ needs.test.result }}" == "success" ]]; then
            echo "✅ **All tests passed successfully!**" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Some tests failed. Check the artifacts for details.**" >> $GITHUB_STEP_SUMMARY
          fi

          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "📊 **Allure Report**: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Slack Notification (on failure)
        if: failure() && github.ref == 'refs/heads/main'
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          text: |
            🚨 Test Pipeline Failed
            Repository: ${{ github.repository }}
            Branch: ${{ github.ref_name }}
            Commit: ${{ github.sha }}
            Run: ${{ github.run_number }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        continue-on-error: true
